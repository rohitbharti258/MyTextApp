{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","showgreen","togglemode","showdarkblue","TextForm","useState","text","setText","heading","htmlFor","value","style","onChange","event","target","rows","newText","toUpperCase","showalert","toLowerCase","tex","document","getElementById","select","navigator","clipboard","writeText","newtxt","split","join","length","Alert","alert","class","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setmode","settext","setalert","message","setTimeout","color","setstyle","backgroundColor","style1","setstyle1","body","opacity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3b37db0a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './app.css';\r\nimport { useState } from 'react/cjs/react.development';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n \r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n\r\n\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n            <div className=\"form-check form-switch \">\r\n              <input className=\"form-check-input green\"   onClick={props.showgreen} type=\"checkbox\" id=\"myswitch\" />\r\n              {/* <label className=\"form-check-label\"  style={props.style}  htmlFor=\"myswitch\">Enable {props.text} mode</label> */}\r\n            </div>\r\n            <div className=\"form-check form-switch \">\r\n              <input className=\"form-check-input primary\"  onClick={props.togglemode} type=\"checkbox\" id=\"myswitch\"/>\r\n            </div>\r\n            <div className=\"form-check form-switch \">\r\n              <input className=\"form-check-input darkblue\"  onClick={props.showdarkblue} type=\"checkbox\" id=\"myswitch\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'about Text here'\r\n};","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text,setText] = useState('');\r\n    const handleUpclick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n        props.showalert(\"Converted to uppercase\",\"success\");\r\n    \r\n    }\r\n    const handleDownclick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText= text.toLowerCase();\r\n        setText(newText);\r\n        props.showalert(\"Converted to lowercase\",\"success\");\r\n    }\r\n    const handleClearclick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText= '';\r\n        setText(newText);\r\n        props.showalert(\"Cleared text\",\"success\");\r\n    }\r\n    const handleOnchange= (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy= ()=>{\r\n        var tex = document.getElementById(\"exampleFormControlTextarea1\");\r\n        tex.select();\r\n       navigator.clipboard.writeText(tex.value);\r\n       props.showalert(\"Copied to clipboard\",\"success\");\r\n    }\r\n    const handleextraspaces= ()=>{\r\n   let newtxt = text.split(/[ ]+/);\r\n   setText(newtxt.join(\" \"));\r\n  \r\n      props.showalert(\"Extra spaces removed\",\"success\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlTextarea1\"  className=\"form-label\"></label>\r\n                <textarea className=\"form-control\" value={text} style={props.style} onChange={handleOnchange} id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpclick} >Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleDownclick} >Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearclick} >Clear text</button> \r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy} >Copy text</button> \r\n            <button className=\"btn btn-primary mx-2\" onClick={handleextraspaces} >Remove extra sapce</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h2>Your text summary</h2>\r\n            <p><b>{text.split(\" \").length}</b> words and <b>{text.length}</b> characters</p>\r\n            <p><b>{0.008*text.split(\" \").length}</b> Minutes read</p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length>0?text:\"Enter something to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() +lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            \r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg} \r\n            {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport { useState } from 'react/cjs/react.development';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\nfunction App() {\n\n  const [mode, setmode] = useState('light');\n  const [text, settext] = useState('dark');\n  const [alert, setalert] = useState(null);\n  const [color, setcolor] = useState('white');\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  }\n  const [style, setstyle] = useState({\n    color: 'black',\n  });\n  const [style1, setstyle1] = useState({\n    color: 'black',\n    backgroundColor: 'white'\n  });\n  const showgreen = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      settext('light');\n      setstyle1({\n        color: 'white',\n        backgroundColor: 'green'\n      });\n      setstyle({\n        color: 'white'\n\n      });\n      document.body.style.backgroundColor = 'green';\n      document.body.style.opacity = '0.9';\n      document.body.style.color = 'white';\n      showalert(\" Dark mode has been enabled\", \"success\");\n    }\n    else {\n      settext('dark');\n      setmode('light');\n      setstyle({\n        color: 'black'\n      });\n      setstyle1({\n        color: 'black',\n        backgroundColor: 'white'\n      });\n      document.body.style.color = 'black';\n      document.body.style.backgroundColor = 'white';\n\n      showalert(\" Light mode has been enabled\", \"success\");\n    }\n  }\n  const showdarkblue = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      settext('light');\n      setstyle1({\n        color: 'white',\n        backgroundColor: '#173459'\n      });\n      setstyle({\n        color: 'white'\n\n      });\n      document.body.style.backgroundColor = '#173459';\n      document.body.style.opacity = '0.9';\n      document.body.style.color = 'white';\n      showalert(\" Dark mode has been enabled\", \"success\");\n    }\n    else {\n      settext('dark');\n      setmode('light');\n      setstyle({\n        color: 'black'\n      });\n      setstyle1({\n        color: 'black',\n        backgroundColor: 'white'\n      });\n      document.body.style.color = 'black';\n      document.body.style.backgroundColor = 'white';\n\n      showalert(\" Light mode has been enabled\", \"success\");\n    }\n  }\n  const togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      settext('light');\n      setstyle1({\n        color: 'white',\n        backgroundColor: '#962806'\n      });\n      setstyle({\n        color: 'white'\n\n      });\n      document.body.style.backgroundColor = '#962806';\n      document.body.style.color = 'white';\n      showalert(\" Dark mode has been enabled\", \"success\");\n    }\n    else {\n      settext('dark');\n      setmode('light');\n      setstyle({\n        color: 'black'\n\n      });\n      setstyle1({\n        color: 'black',\n        backgroundColor: 'white'\n      });\n      document.body.style.color = 'black';\n      document.body.style.backgroundColor = 'white';\n      showalert(\" Light mode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"Myapp\" aboutText=\"About myapp\" mode={mode} togglemode={togglemode} text={text} style={style} showgreen={showgreen} showdarkblue={showdarkblue} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n              <TextForm heading=\"Enter the text to analyze\" style={style1} showalert={showalert} ></TextForm>\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}